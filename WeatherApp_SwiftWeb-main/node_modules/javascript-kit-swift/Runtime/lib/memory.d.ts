import { pointer } from "./types.js";
export declare class Memory {
    readonly rawMemory: WebAssembly.Memory;
    private readonly heap;
    constructor(exports: WebAssembly.Exports);
    retain: (value: any) => number;
    getObject: (ref: number) => any;
    release: (ref: number) => void;
    bytes: () => Uint8Array;
    dataView: () => DataView;
    writeBytes: (ptr: pointer, bytes: Uint8Array) => void;
    readUint32: (ptr: pointer) => number;
    readUint64: (ptr: pointer) => bigint;
    readInt64: (ptr: pointer) => bigint;
    readFloat64: (ptr: pointer) => number;
    writeUint32: (ptr: pointer, value: number) => void;
    writeUint64: (ptr: pointer, value: bigint) => void;
    writeInt64: (ptr: pointer, value: bigint) => void;
    writeFloat64: (ptr: pointer, value: number) => void;
}
